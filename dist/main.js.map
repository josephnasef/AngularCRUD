{"version":3,"sources":["./src/app/employee/employee.component.ts","./src/app/employee/employee.component.html","./src/environments/environment.ts","./src/app/Services/department.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/Services/employee.service.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/department/department.component.ts","./src/app/department/department.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { EmployeeService } from '../Services/employee.service';\r\nimport { Employee } from '../Classes/employee';\r\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource, } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n\r\n\r\n// tslint:disable-next-line:class-name\r\ninterface department {\r\n  departmentId: string; \r\n  departmentName: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-employee',\r\n  templateUrl: './employee.component.html',\r\n  styleUrls: ['./employee.component.css']\r\n})\r\n\r\nexport class EmployeeComponent implements OnInit {\r\n  dataSaved = false;\r\n  employeeForm: any;\r\n  allEmployees: Observable<Employee[]>;\r\n  dataSource: MatTableDataSource<Employee>;\r\n  selection = new SelectionModel<Employee>(true, []);\r\n  employeeIdUpdate = null;\r\n  massage = null;\r\n  alldepartment: department[];\r\n  departmentId = null;  \r\n  SelectedDate = null;\r\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\r\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\r\n  displayedColumns: string[] = [ 'employeeName', 'employeeTitle', 'employeeBirthDate', 'employeeHiringDate','departmentName', 'Edit', 'Delete'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  constructor(private formbulider: FormBuilder, private employeeService: EmployeeService, private _snackBar: MatSnackBar, public dialog: MatDialog) {\r\n    this.employeeService.getAllEmployee().subscribe(data => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.employeeForm = this.formbulider.group({\r\n      employeeName: ['', [Validators.required]],\r\n      employeeTitle: ['', [Validators.required]],\r\n      employeeBirthDate: ['', [Validators.required]],\r\n      employeeHiringDate: ['', [Validators.required]],\r\n      departmentName: ['', [Validators.required]],\r\n      departmentId: ['', [Validators.required]],\r\n    });\r\n    this.FilldepartmentDDL();\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = !!this.dataSource && this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ? this.selection.clear() : this.dataSource.data.forEach(r => this.selection.select(r));\r\n  }\r\n  \r\n  \r\n  DeleteData() {\r\n    debugger;\r\n    const numSelected = this.selection.selected;\r\n    if (numSelected.length > 0) {\r\n      if (confirm(\"Are you sure to delete items \")) {\r\n        this.employeeService.deleteData(numSelected).subscribe(result => {\r\n          this.SavedSuccessful(2);\r\n          this.loadAllEmployees();\r\n        })\r\n      }\r\n    } else {\r\n      alert(\"Select at least one row\");\r\n    }\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  loadAllEmployees() {\r\n    this.employeeService.getAllEmployee().subscribe(data => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  \r\n  onFormSubmit() {\r\n    this.dataSaved = false;\r\n    const employee = this.employeeForm.value;\r\n    this.CreateEmployee(employee);\r\n    this.employeeForm.reset();\r\n  }\r\n\r\n  loadEmployeeToEdit(employeeId: string) {\r\n    this.employeeService.getEmployeeById(employeeId).subscribe(employee => {\r\n      this.massage = null;\r\n      this.dataSaved = false;\r\n      this.employeeIdUpdate = employee.employeeId;\r\n      this.employeeForm.controls['employeeName'].setValue(employee.employeeName);\r\n      this.employeeForm.controls['employeeTitle'].setValue(employee.employeeTitle);\r\n      this.employeeForm.controls['employeeBirthDate'].setValue(employee.employeeBirthDate);\r\n      this.employeeForm.controls['employeeHiringDate'].setValue(employee.employeeHiringDate);\r\n      //this.employeeForm.controls['departmentName'].setValue(employee.departmentName);\r\n      this.employeeForm.controls['departmentId'].setValue(employee.departmentId);\r\n      this.employeeForm.controls['departmentName'].setValue(employee.departmentName);\r\n      this.employeeForm.controls['departmentName'].disable();\r\n      console.log(employee.departmentId);\r\n\r\n      this.departmentId = employee.departmentId;\r\n    });\r\n\r\n  }\r\n  CreateEmployee(employee: Employee) {\r\n    console.log(employee.employeeBirthDate);\r\n    console.log(employee.employeeHiringDate);\r\n    console.log(employee);\r\n    if (this.employeeIdUpdate == null) {\r\n      //employee.departmentId = this.departmentId;\r\n\r\n\r\n      this.employeeService.createEmployee(employee).subscribe(\r\n        () => {\r\n          this.dataSaved = true;\r\n          this.SavedSuccessful(1);\r\n          this.loadAllEmployees();\r\n          this.employeeIdUpdate = null;\r\n          this.employeeForm.reset();\r\n        }\r\n      );\r\n    } else {\r\n      employee.employeeId = this.employeeIdUpdate;\r\n      //employee.departmentId = this.departmentId;\r\n\r\n      this.employeeService.updateEmployee(employee).subscribe(() => {\r\n        this.dataSaved = true;\r\n        this.SavedSuccessful(0);\r\n        this.loadAllEmployees();\r\n        this.employeeIdUpdate = null;\r\n        this.employeeForm.reset();\r\n      });\r\n    }\r\n  }\r\n  deleteEmployee(employeeId: string) {\r\n    if (confirm(\"Are you sure you want to delete this ?\")) {\r\n      this.employeeService.deleteEmployeeById(employeeId).subscribe(() => {\r\n        this.dataSaved = true;\r\n        this.SavedSuccessful(2);\r\n        this.loadAllEmployees();\r\n        this.employeeIdUpdate = null;\r\n        this.employeeForm.reset();\r\n\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  FilldepartmentDDL() {\r\n    // tslint:disable-next-line:max-line-length\r\n    //  this.alldepartment =\r\n    this.employeeService.getdepartment().subscribe(data => this.alldepartment  = data as department[]);\r\n\r\n  }\r\n\r\n\r\n  resetForm() {\r\n    this.employeeForm.reset();\r\n    this.massage = null;\r\n    this.dataSaved = false;\r\n    this.loadAllEmployees();\r\n  }\r\n\r\n  SavedSuccessful(isUpdate) {\r\n    if (isUpdate === 0) {\r\n      this._snackBar.open('Record Updated Successfully!', 'Close', {\r\n        duration: 2000,\r\n        horizontalPosition: this.horizontalPosition,\r\n        verticalPosition: this.verticalPosition,\r\n      });\r\n    } \r\n    else if (isUpdate === 1) {\r\n      this._snackBar.open('Record Saved Successfully!', 'Close', {\r\n        duration: 2000,\r\n        horizontalPosition: this.horizontalPosition,\r\n        verticalPosition: this.verticalPosition,\r\n      });\r\n    }\r\n    else if (isUpdate === 2) {\r\n      this._snackBar.open('Record Deleted Successfully!', 'Close', {\r\n        duration: 2000,\r\n        horizontalPosition: this.horizontalPosition,\r\n        verticalPosition: this.verticalPosition,\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n    <mat-card class=\"mat-elevation-z8\">\r\n        <mat-toolbar color=\"accent\" style=\"padding:10px;box-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\">\r\n            <div align=\"center\" style=\"text-align: right;\">\r\n                Employees CRUD using : Angular 12 with Web API\r\n\r\n            </div>\r\n        </mat-toolbar>\r\n        <br><br>\r\n        <mat-card-content>\r\n            <form [formGroup]=\"employeeForm\" (ngSubmit)=\"onFormSubmit()\">\r\n                <table>\r\n                    <tr>\r\n                        <td class=\"tbl1\">\r\n                            <mat-form-field class=\"demo-full-width\">\r\n                                <input formControlName=\"employeeName\" matTooltip=\"Enter Employee employeeName\" matInput placeholder=\"employeeName\" autocomplete=\"off\">\r\n                            </mat-form-field>\r\n                            <mat-error>\r\n                                <span *ngIf=\"!employeeForm.get('employeeName').value && employeeForm.get('employeeName').touched\"></span>\r\n                            </mat-error>\r\n                        </td>\r\n                        <td class=\"tbl1\">\r\n                            <mat-form-field class=\"demo-full-width\">\r\n                                <input formControlName=\"employeeTitle\" matTooltip=\"Enter Employee employeeTitle\" matInput placeholder=\"employeeTitle\" autocomplete=\"off\">\r\n                            </mat-form-field>\r\n                            <mat-error>\r\n                                <span *ngIf=\"!employeeForm.get('employeeTitle').value && employeeForm.get('employeeTitle').touched\"></span>\r\n                            </mat-error>\r\n                        </td>\r\n                        <td class=\"tbl1\">\r\n                            <mat-form-field class=\"demo-full-width\">\r\n                                <input matInput [matDatepicker]=\"picker\" matTooltip=\"Enter Date Of Birth\" formControlName=\"employeeBirthDate\" placeholder=\"Date Of Birth\" autocomplete=\"off\">\r\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #picker></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <mat-error>\r\n                                <span *ngIf=\"!employeeForm.get('employeeBirthDate').value && employeeForm.get('employeeBirthDate').touched\"></span>\r\n                            </mat-error>\r\n                        </td>\r\n                        <td class=\"tbl1\">\r\n                            <mat-form-field class=\"demo-full-width\">\r\n                                <input matInput [matDatepicker]=\"picker2\" matTooltip=\"Enter Date Of Hiring\" formControlName=\"employeeHiringDate\" placeholder=\"Date Of Hiring\" autocomplete=\"off\">\r\n                                <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #picker2></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <mat-error>\r\n                                <span *ngIf=\"!employeeForm.get('employeeHiringDate').value && employeeForm.get('employeeHiringDate').touched\"></span>\r\n                            </mat-error>\r\n                        </td>\r\n                        <td class=\"tbl1\">\r\n                            <mat-form-field class=\"demo-full-width\">\r\n                                <input formControlName=\"departmentName\" matTooltip=\"Enter departmentName\" matInput placeholder=\"department\" autocomplete=\"off\">\r\n                            </mat-form-field>\r\n                            <mat-error>\r\n                                <span *ngIf=\"!employeeForm.get('departmentName').value && employeeForm.get('departmentName').touched\"></span>\r\n                            </mat-error>\r\n                        </td>\r\n\r\n                    </tr>\r\n                    <tr>\r\n                        <td class=\"tbl1\">\r\n                            <mat-form-field>\r\n                                <mat-label>department</mat-label>\r\n                                <mat-select formControlName=\"departmentId\" matTooltip=\"Select department\" autocomplete=\"off\">\r\n                                    <mat-option *ngFor=\"let department of (alldepartment)\" [value]=\"department.departmentId\">\r\n                                        {{department.departmentName}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td class=\"content-center\">\r\n                            <!-- <button type=\"submit\" mat-raised-button color=\"accent\" matTooltip=\"Submit\" [disabled]=\"!employeeForm.valid\">Submit</button>&nbsp;&nbsp;&nbsp;&nbsp; -->\r\n                            <button type=\"submit\" mat-raised-button color=\"accent\" matTooltip=\"Submit\">Submit</button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <button type=\"reset\" mat-raised-button color=\"accent\" matTooltip=\"Reset\" (click)=\"resetForm()\">Reset</button>\r\n                        </td>\r\n                        <td>\r\n                            <p *ngIf=\"dataSaved\" style=\"color:rgb(0, 128, 0);font-size:20px;font-weight:bold\" Class=\"success\" align=\"left\">\r\n                                {{massage}}\r\n                            </p>\r\n                        </td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                </table>\r\n                <br><br>\r\n\r\n\r\n\r\n                <!--<mat-form-field>\r\n\r\n        </mat-form-field>-->\r\n\r\n                <mat-form-field>\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                </mat-form-field>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <button mat-icon-button aria-label=\"Example icon button with a delete icon\" type=\"button\" mat-raised-button color=\"accent\" matTooltip=\"Delete\" (click)=\"DeleteData()\"><mat-icon>delete</mat-icon></button>\r\n\r\n                <div>\r\n\r\n                    <mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\" style=\"box-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\">\r\n\r\n                        <!-- Checkbox Column -->\r\n                        <ng-container matColumnDef=\"select\">\r\n                            <mat-header-cell *matHeaderCellDef>\r\n                                <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\" [indeterminate]=\"selection.hasValue() && !isAllSelected()\"></mat-checkbox>\r\n                            </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let row\">\r\n                                <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\"></mat-checkbox>\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <ng-container matColumnDef=\"employeeName\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Name </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let employee\"> {{employee.employeeName}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <ng-container matColumnDef=\"employeeTitle\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Title </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let employee\"> {{employee.employeeTitle}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <ng-container matColumnDef=\"employeeBirthDate\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Date Of Birth </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let employee\"> {{employee.employeeBirthDate | date:'dd-MM-yyyy'}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <ng-container matColumnDef=\"employeeHiringDate\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Date Of Hiring </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let employee\"> {{employee.employeeHiringDate | date:'dd-MM-yyyy'}}</mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- <ng-container matColumnDef=\"departmentId\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> department </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let employee\"> {{employee.departmentId}} </mat-cell>\r\n                        </ng-container> -->\r\n\r\n                        <ng-container matColumnDef=\"departmentName\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> department </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let employee\"> {{employee.departmentName}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- <ng-container matColumnDef=\"department\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> department </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let employee\"> {{employee.departmentId}} </mat-cell>\r\n                        </ng-container> -->\r\n\r\n                        <ng-container matColumnDef=\"Edit\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Edit </mat-header-cell>\r\n\r\n                            <mat-cell *matCellDef=\"let employee\">\r\n\r\n                                <button mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\" type=\"button\" mat-raised-button color=\"accent\" matTooltip=\"Edit\" (click)=\"loadEmployeeToEdit(employee.employeeId)\"><mat-icon>edit</mat-icon></button>\r\n                                <!--<button mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\" color=\"accent\" matTooltip=\"Edit\" (click)=\"loadEmployeeToEdit(employee.EmpId)\">\r\n                  <mat-icon>more_vert</mat-icon>\r\n                </button>-->\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <ng-container matColumnDef=\"Delete\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Delete </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let employee\"> <button mat-icon-button aria-label=\"Example icon button with a delete icon\" type=\"button\" mat-raised-button color=\"accent\" matTooltip=\"Delete\" (click)=\"deleteEmployee(employee.employeeId)\"><mat-icon>delete_forever</mat-icon></button></mat-cell>\r\n                        </ng-container>\r\n\r\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n                    </mat-table>\r\n\r\n                    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                </div>\r\n\r\n                <!--<table mat-table class=\"table\">\r\n          <tr color=\"accent\">\r\n            <th class=\"tbl2\">First Name</th>\r\n            <th class=\"tbl2\">Last Name</th>\r\n            <th class=\"tbl2\">Date Of Birth</th>\r\n            <th class=\"tbl2\">Email Id</th>\r\n            <th class=\"tbl2\">Gender</th>\r\n            <th class=\"tbl2\">Country</th>\r\n            <th class=\"tbl2\">State</th>\r\n            <th class=\"tbl2\">City</th>\r\n            <th class=\"tbl2\">Address</th>\r\n            <th class=\"tbl2\">Pincode</th>\r\n            <th class=\"tbl2\">Edit</th>\r\n            <th class=\"tbl2\">Delete</th>\r\n          </tr>\r\n          <tr *ngFor=\"let employee of allEmployees | async\">\r\n            <td class=\"tbl2\">{{employee.employeeName}}</td>\r\n            <td class=\"tbl2\">{{employee.employeeTitle}}</td>\r\n            <td class=\"tbl2\">{{employee.employeeBirthDate | date }}</td>\r\n            <td class=\"tbl2\">{{employee.departmentName}}</td>\r\n            <td class=\"tbl2\">{{employee.Gender ==0? 'Male' : 'Female'}}</td>\r\n            <td class=\"tbl2\">{{employee.Country}}</td>\r\n            <td class=\"tbl2\">{{employee.State}}</td>\r\n            <td class=\"tbl2\">{{employee.City}}</td>\r\n            <td class=\"tbl2\">{{employee.Address}}</td>\r\n            <td class=\"tbl2\">{{employee.Pincode}}</td>\r\n            <td class=\"tbl2\">\r\n              <button type=\"button\" mat-raised-button color=\"accent\" matTooltip=\"Edit\" (click)=\"loadEmployeeToEdit(employee.EmpId)\">Edit</button>\r\n            </td>\r\n            <td class=\"tbl2\">\r\n              <button type=\"button\" mat-raised-button color=\"accent\" matTooltip=\"Delete\" (click)=\"deleteEmployee(employee.EmpId)\">Delete</button>\r\n            </td>\r\n          </tr>\r\n        </table>-->\r\n            </form>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Department } from './../Classes/department';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DepartmentService {\n  url = `https://localhost:44341/api/Department/`;\n  constructor(private http:HttpClient) { }\n  getAllDepartment(): Observable<Department[]> {\n    return this.http.get<Department[]>(this.url);\n  }\n  getDepartmentById(departmentId: string): Observable<Department> {  \n    return this.http.get<Department>(this.url + departmentId + '?departmentId=' + departmentId);  \n  }\n  createDepartment(department: Department): Observable<Department> {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this.http.post<Department>(this.url,\n      department, httpOptions);\n  }\n  updateDepartment(department: Department): Observable<Department> {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n\n    return this.http.put<Department>(this.url + department.departmentId,\n      department, httpOptions);\n  }\n  deleteDepartmentById(departmentId: string): Observable<number> {\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    return this.http.delete<number>(this.url +  departmentId,\n      httpOptions);\n  }\n\n  getdepartment(): Observable<Department[]> {\n    return this.http.get<Department[]>('https://localhost:44341/api/department');\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularCRUD';\n}\n","<body>\r\n    <app-navbar></app-navbar>\r\n    <div class=\"container\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</body>\r\n<!-- \r\n<app-employee></app-employee>\r\n\r\n<router-outlet></router-outlet> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { EmployeeService } from './Services/employee.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n// tslint:disable-next-line:quotemark\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { NgMarqueeModule } from 'ng-marquee';\nimport { CommonModule } from '@angular/common';\nimport { DepartmentComponent } from './department/department.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeComponent,\n    DepartmentComponent,\n    NavbarComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatIconModule,\n    MatRadioModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatToolbarModule,\n    AppRoutingModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatTableModule,\n    CdkTableModule,\n    MatPaginatorModule,\n    NgMarqueeModule,\n    RouterModule.forRoot([           \n      { path: '', component: EmployeeComponent },\n      { path: 'Department', component: DepartmentComponent },\n    ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Employee } from '../Classes/employee';\r\nimport { Department } from '../Classes/employee';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n  url = `https://localhost:44341/api/Employee/`;\r\n  constructor(private http: HttpClient) { }\r\n  getAllEmployee(): Observable<Employee[]> {\r\n    return this.http.get<Employee[]>(this.url);\r\n  }\r\n  getEmployeeById(employeeId: string): Observable<Employee> {  \r\n    return this.http.get<Employee>(this.url + employeeId + '?employeeId=' + employeeId);  \r\n  }\r\n  createEmployee(employee: Employee): Observable<Employee> {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n    return this.http.post<Employee>(this.url,\r\n      employee, httpOptions);\r\n  }\r\n  updateEmployee(employee: Employee): Observable<Employee> {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n\r\n    return this.http.put<Employee>(this.url + employee.employeeId,\r\n      employee, httpOptions);\r\n  }\r\n  deleteEmployeeById(employeeid: string): Observable<number> {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n    return this.http.delete<number>(this.url +  employeeid,\r\n      httpOptions);\r\n  }\r\n\r\n  getdepartment(): Observable<Department[]> {\r\n    return this.http.get<Department[]>('https://localhost:44341/api/department');\r\n  }\r\n\r\n  deleteData(user: Employee[]): Observable<string> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    return this.http.post<string>(this.url + '/DeleteRecord/', user, httpOptions);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n    <nav class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\">\n        <div class=\"container\">\n            <a class=\"navbar-brand\" [routerLink]=\"['/']\"> Company - Employees</a>\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n            <div class=\"navbar-collapse collapse d-sm-inline-flex justify-content-end\">\n                <ul class=\"navbar-nav flex-grow \">\n                    <li class=\"nav-item \" [routerLinkActive]=\"[ 'link-active'] \">\n                        <a class=\"nav-link text-dark \" [routerLink]=\"[ '/'] \">Employee</a>\n                    </li>\n\n                    <li class=\"nav-item \" [routerLinkActive]=\"[ 'link-active'] \">\n                        <a class=\"nav-link text-dark \" [routerLink]=\"[ '/Department'] \">Department</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n</header>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource, } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DepartmentService } from './../Services/department.service';\nimport { Department } from '../Classes/department';\n\n\n\n// tslint:disable-next-line:class-name\ninterface department {\n  departmentId: string;\n  departmentName: string;\n}\n\n@Component({\n  selector: 'app-department',\n  templateUrl: './department.component.html',\n  styleUrls: ['./department.component.css']\n})\nexport class DepartmentComponent implements OnInit {\n  dataSaved = false;\n  departmentForm: any;\n  alldepartments: Observable<department[]>;\n  dataSource: MatTableDataSource<department>;\n  selection = new SelectionModel<department>(true, []);\n  departmentIdUpdate = null;\n  massage = null;\n  alldepartment: department[];\n  departmentId = null;\n  SelectedDate = null;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  displayedColumns: string[] = [ 'departmentName', 'totalEmployees', 'Edit', 'Delete'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private formbulider: FormBuilder, private departmentService: DepartmentService, private _snackBar: MatSnackBar, public dialog: MatDialog) {\n    this.departmentService.getAllDepartment().subscribe(data => {\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  ngOnInit() {\n    this.departmentForm = this.formbulider.group({\n      departmentName: ['', [Validators.required]],\n      totalEmployees: ['', [Validators.required]],      \n    });\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = !!this.dataSource && this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ? this.selection.clear() : this.dataSource.data.forEach(r => this.selection.select(r));\n  }\n\n  \n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  loadAlldepartments() {\n    this.departmentService.getAllDepartment().subscribe(data => {\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  \n  onFormSubmit() {\n    this.dataSaved = false;\n    const department = this.departmentForm.value;\n    this.CreateDepartment(department);\n    this.departmentForm.reset();\n  }\n\n  loaddepartmentToEdit(departmentId: string) {\n    this.departmentService.getDepartmentById(departmentId).subscribe(department => {\n      this.massage = null;\n      this.dataSaved = false;\n      this.departmentIdUpdate = department.departmentId;\n      this.departmentForm.controls['departmentName'].setValue(department.departmentName);\n      this.departmentForm.controls['totalEmployees'].setValue(department.totalEmployees);\n\n      console.log(department.departmentId);\n      this.departmentId = department.departmentId;\n    });\n\n  }\n\n  CreateDepartment(department: Department) {\n    console.log(department.departmentName);\n    console.log(department.departmentId);\n    console.log(department);\n    if (this.departmentIdUpdate == null) {\n      //employee.departmentId = this.departmentId;\n\n\n      this.departmentService.createDepartment(department).subscribe(\n        () => {\n          this.dataSaved = true;\n          this.SavedSuccessful(1);\n          this.loadAlldepartments();\n          this.departmentIdUpdate = null;\n          this.departmentForm.reset();\n        }\n      );\n    } else {\n      department.departmentId = this.departmentIdUpdate;\n      //employee.departmentId = this.departmentId;\n\n      this.departmentService.updateDepartment(department).subscribe(() => {\n        this.dataSaved = true;\n        this.SavedSuccessful(0);\n        this.loadAlldepartments();\n        this.departmentIdUpdate = null;\n        this.departmentForm.reset();\n      });\n    }\n  }\n  deleteEmployee(employeeId: string) {\n    if (confirm(\"Are you sure you want to delete this ?\")) {\n      this.departmentService.deleteDepartmentById(employeeId).subscribe(() => {\n        this.dataSaved = true;\n        this.SavedSuccessful(2);\n        this.loadAlldepartments();\n        this.departmentIdUpdate = null;\n        this.departmentForm.reset();\n\n      });\n    }\n\n  }\n\n  // tslint:disable-next-line:typedef\n  FilldepartmentDDL() {\n    // tslint:disable-next-line:max-line-length\n    //  this.alldepartment =\n    this.departmentService.getdepartment().subscribe(data => this.alldepartment  = data as department[]);\n\n  }\n\n\n  resetForm() {\n    this.departmentForm.reset();\n    this.massage = null;\n    this.dataSaved = false;\n    this.loadAlldepartments();\n  }\n\n  SavedSuccessful(isUpdate) {\n    if (isUpdate === 0) {\n      this._snackBar.open('Record Updated Successfully!', 'Close', {\n        duration: 2000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition,\n      });\n    } \n    else if (isUpdate === 1) {\n      this._snackBar.open('Record Saved Successfully!', 'Close', {\n        duration: 2000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition,\n      });\n    }\n    else if (isUpdate === 2) {\n      this._snackBar.open('Record Deleted Successfully!', 'Close', {\n        duration: 2000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition,\n      });\n    }\n  }\n}\n","<h1>Hello </h1>\r\n\r\n<div class=\"container\">\r\n\r\n    <mat-card class=\"mat-elevation-z8\">\r\n        <mat-toolbar color=\"accent\" style=\"box-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\">\r\n            <div align=\"center\" style=\"text-align: right;\">\r\n                Department CRUD using : Angular 12 with Web API\r\n            </div>\r\n        </mat-toolbar>\r\n        <br><br>\r\n        <mat-card-content>\r\n            <form [formGroup]=\"departmentForm\" (ngSubmit)=\"onFormSubmit()\">\r\n                <table>\r\n                    <tr>\r\n                        <td class=\"tbl1\">\r\n                            <mat-form-field class=\"demo-full-width\">\r\n                                <input formControlName=\"departmentName\" matTooltip=\"Enter department Name\" matInput placeholder=\"department name\" autocomplete=\"off\">\r\n                            </mat-form-field>\r\n                            <mat-error>\r\n                                <span *ngIf=\"!departmentForm.get('departmentName').value && departmentForm.get('departmentName').touched\"></span>\r\n                            </mat-error>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td class=\"content-center\">\r\n                            <!-- <button type=\"submit\" mat-raised-button color=\"accent\" matTooltip=\"Submit\" [disabled]=\"!employeeForm.valid\">Submit</button>&nbsp;&nbsp;&nbsp;&nbsp; -->\r\n                            <button type=\"submit\" mat-raised-button color=\"accent\" matTooltip=\"Submit\">Submit</button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <button type=\"reset\" mat-raised-button color=\"accent\" matTooltip=\"Reset\" (click)=\"resetForm()\">Reset</button>\r\n                        </td>\r\n                        <td>\r\n                            <p *ngIf=\"dataSaved\" style=\"color:rgb(0, 128, 0);font-size:20px;font-weight:bold\" Class=\"success\" align=\"left\">\r\n                                {{massage}}\r\n                            </p>\r\n                        </td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                </table>\r\n                <br><br>\r\n\r\n\r\n\r\n                <!--<mat-form-field>\r\n\r\n        </mat-form-field>-->\r\n\r\n                <mat-form-field>\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                </mat-form-field>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                <div>\r\n\r\n                    <mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\" style=\"box-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12); padding:10px\">\r\n\r\n                        <!-- Checkbox Column -->\r\n                        <ng-container matColumnDef=\"select\">\r\n                            <mat-header-cell *matHeaderCellDef>\r\n                                <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\" [indeterminate]=\"selection.hasValue() && !isAllSelected()\"></mat-checkbox>\r\n                            </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let row\">\r\n                                <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\"></mat-checkbox>\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <ng-container matColumnDef=\"departmentName\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Name </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let department\"> {{department.departmentName}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <ng-container matColumnDef=\"totalEmployees\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Title </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let department\"> {{department.totalEmployees}} </mat-cell>\r\n                        </ng-container>\r\n\r\n\r\n                        <ng-container matColumnDef=\"Edit\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Edit </mat-header-cell>\r\n\r\n                            <mat-cell *matCellDef=\"let department\">\r\n\r\n                                <button mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\" type=\"button\" mat-raised-button color=\"accent\" matTooltip=\"Edit\" (click)=\"loaddepartmentToEdit(department.departmentId)\"><mat-icon>edit</mat-icon></button>\r\n                                <!--<button mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\" color=\"accent\" matTooltip=\"Edit\" (click)=\"loadEmployeeToEdit(employee.EmpId)\">\r\n                  <mat-icon>more_vert</mat-icon>\r\n                </button>-->\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <ng-container matColumnDef=\"Delete\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Delete </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let department\"> <button mat-icon-button aria-label=\"Example icon button with a delete icon\" type=\"button\" mat-raised-button color=\"accent\" matTooltip=\"Delete\" (click)=\"deleteEmployee(department.departmentId)\"><mat-icon>delete_forever</mat-icon></button></mat-cell>\r\n                        </ng-container>\r\n\r\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n                    </mat-table>\r\n\r\n                    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                </div>\r\n            </form>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowser } from '@angular/platform-browser';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}